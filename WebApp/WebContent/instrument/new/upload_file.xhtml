<ui:composition xmlns="http://www.w3.org/1999/xhtml"
  xmlns:h="http://xmlns.jcp.org/jsf/html"
  xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
  xmlns:f="http://xmlns.jcp.org/jsf/core" xmlns:p="http://primefaces.org/ui"
  xmlns:c="http://java.sun.com/jsp/jstl/core"
  template="/WEB-INF/templates/new_instrument.xhtml">
  <ui:define name="instrumentHead">
    <h:outputScript name="script/newInstrument/uploadFile.js" />
    <c:set var="instrumentStep" value="3" scope="request" />
    <script>
      var hasFileData = #{newInstrumentBean.currentInstrumentFile.hasFileData};

      $(document).ready(function() {
        if (hasFileData) {
          $('#fileSpec').show();
          renderSampleFile();
        } else {
          $('#uploadFile').show();
        }
      });
    </script>
  </ui:define>
  <ui:define name="new_instrument_content">
    <h:form id="newInstrumentForm" method="post" charset="utf8"
      enctype="multipart/form-data">
      <h:inputHidden id="sampleFileContent"
        value="#{newInstrumentBean.currentInstrumentFile.filePreview}" />
      <p:remoteCommand name="guessFileLayout" ajax="true" process="@this"
        update="headerType headerLineCount headerEndString separator columnHeaderRows columnCount sampleFileContent"
        action="#{newInstrumentBean.currentInstrumentFile.guessFileLayout}"
        oncomplete="updateFileContentDisplay()" />
      <div id="uploadFormContent">
        <div class="instructions">
          Please upload a sample file from your instrument.
          <h:outputText
            value="If your instrument uses more than one data file, others can be uploaded later."
            rendered="#{!newInstrumentBean.hasMultipleFiles}" />
        </div>
        <h:panelGrid columns="3" cellpadding="5">
          <ui:fragment rendered="#{newInstrumentBean.multipleFilesAllowed()}">
            <p:outputLabel for="fileDescription"
              value="File Description (e.g. TSG)" />
            <p:inputText id="fileDescription"
              value="#{newInstrumentBean.currentInstrumentFile.fileDescription}"
              required="true" requiredMessage="You must enter a file description">
              <f:validator validatorId="instrumentFileDescriptionValidator" />
              <f:attribute name="bean" value="#{newInstrumentBean}" />
              <p:ajax update="msgFileDescription" event="keyup"
                oncomplete="updateUseFileButton()" />
            </p:inputText>
            <p:message for="fileDescription" id="msgFileDescription"
              display="both" />
          </ui:fragment>
        </h:panelGrid>
        <div id="uploadFile" class="hidden">
          <p:outputLabel value="Select a file to upload" />
          <p:fileUpload
            listener="#{newInstrumentBean.handleFileUpload}"
            mode="advanced" auto="true" oncomplete="showProcessingMessage()" />
        </div>
        <div id="processingFileMessage" class="hidden">Processing file...
        </div>
        <div id="fileFormatSpec" class="hidden">
          <div id="fileFormatSpecContent">
            <div id="fileContent"></div>
            <div id="fileFormat">
              <p:panel header="File Header">
                <p:outputPanel id="headerPanel">
                  <p:selectOneRadio id="headerType"
                    widgetVar="headerTypeSelector"
                    value="#{newInstrumentBean.currentInstrumentFile.headerType}"
                    layout="custom"
                    onchange="updateHeaderFields(); renderSampleFile()">
                    <f:selectItem itemValue="0" />
                    <f:selectItem itemValue="1" />
                  </p:selectOneRadio>
                  <h:panelGrid columns="3" cellpadding="5">
                    <p:radioButton id="lineCountType" for="headerType"
                      itemIndex="0" />
                    <p:outputLabel for="lineCountType" value="# Lines" />
                    <p:spinner id="headerLineCount" widgetVar="headerLines"
                      size="3"
                      value="#{newInstrumentBean.currentInstrumentFile.headerLines}"
                      min="0" max="500" onkeypress="return numberOnly(event)"
                      onkeyup="setTimeout(function() {renderSampleFile()}, 100)"
                      onchange="renderSampleFile()" />
                    <p:radioButton id="stringType" for="headerType"
                      itemIndex="1" />
                    <p:outputLabel for="stringType" value="End Line" />
                    <p:inputText id="headerEndString"
                      widgetVar="headerEndString"
                      value="#{newInstrumentBean.currentInstrumentFile.headerEndString}"
                      onkeyup="renderSampleFile()" />
                  </h:panelGrid>
                </p:outputPanel>
              </p:panel>
              <p:panel header="Column Headings">
                <div class="flexSet nowrap">
                  <p:outputLabel for="columnHeaderRows"
                    value="Column Header Rows:" styleClass="flexSetItem nowrap" />
                  <p:spinner id="columnHeaderRows" widgetVar="colHeadRows"
                    styleClass="flexSetItem" size="3"
                    value="#{newInstrumentBean.currentInstrumentFile.columnHeaderRows}"
                    min="0" max="500" onkeypress="return numberOnly(event)"
                    onkeyup="setTimeout(function() {renderSampleFile()}, 100)"
                    onchange="renderSampleFile()" />
                </div>
              </p:panel>
              <p:panel header="Separator">
                <div class="flexSet nowrap">
                  <div class="flexSetItem grow">
                    <p:outputLabel for="separator" value="Separator:" />
                  </div>
                  <div class="flexSetItem">
                    <p:selectOneMenu id="separator"
                      value="#{newInstrumentBean.currentInstrumentFile.separatorName}">
                      <p:ajax event="change" update="columnCount"
                        oncomplete="updateColumnCount()" />
                      <f:selectItem itemLabel="Tab" itemValue="TAB" />
                      <f:selectItem itemLabel="Comma" itemValue="COMMA" />
                      <f:selectItem itemLabel="Semi-colon" itemValue="SEMICOLON" />
                      <f:selectItem itemLabel="Space" itemValue="SPACE" />
                    </p:selectOneMenu>
                  </div>
                  <div class="flexSetItem">
                    <h:inputHidden id="columnCount"
                      value="#{newInstrumentBean.currentInstrumentFile.columnCount}" />
                    (
                    <h:outputText id="columnCountDisplay" value="" />
                    columns)
                  </div>
                </div>
              </p:panel>
              <div id="sampleFileMessage" class="errorBox"></div>
              <h:panelGrid columns="2" cellpadding="5" styleClass="buttonPanel">
                <p:commandButton id="discardFile" value="Discard File"
                  ajax="true" action="#{newInstrumentBean.discardUploadedFile}"
                  process="@this"
                  update="headerType headerLineCount headerEndString separator columnHeaderRows columnCount sampleFileContent"
                  oncomplete="discardUploadedFile();return false;"
                  immediate="true" />
                <p:commandButton id="useFile" widgetVar="useFileButton"
                  action="#{newInstrumentBean.useFile}"
                  process="headerType headerLineCount headerEndString columnHeaderRows separator"
                  value="Use File"/>
              </h:panelGrid>
            </div>
          </div>
        </div>
      </div>
      <!--  The cancel include has two entries (one is invisible) -->
      <h:panelGrid columns="2" cellpadding="5" styleClass="buttonPanel">
        <ui:include src="/WEB-INF/templates/new_instrument_cancel.xhtml" />
      </h:panelGrid>
    </h:form>
  </ui:define>
</ui:composition>
